
def strip_html_tags(text):
    [s.extract() for s in text(['iframe','script'])]
    stripped_text = text.get_text()
    stripped_text = re.sub(r'[\r|\n|\r\n]+', '\n', stripped_text)
    return stripped_text

def getStatusList():
  statusList = [True, False, True, True, True, True, True, True, True, True, False, True, False, False, False, True, True, True, True, True, True, True, True, "Mixed", "Moved", "Mixed", True, True, False, False, True, True, True, False, True, True, True, False, True]
  return statusList

def misc(siteList):
  page = OutputBeautifulSoup(siteList[24])
  print(page)
  if (page != "e"):
    cleaned = strip_html_tags(page)
    print("------------------------------------------------")
    cleanedlength = str(len(cleaned))
    print("length of cleaning: " + cleanedlength)
    print(cleaned)

def WebsiteIsUnvailable(htmlpage):
  availability = False
  errorMessages = getListOfErrorCodes()

  for error in errorMessages:
    if (htmlpage.find(error) == True):
      availability = False
      break
  return availability

def ScanContentForPoliticalMessages(htmlpage):
  wordsFound = False
  wordlist = getListOfCommonPoliticalWords()
  tokens = strip_html_tags(htmlpage.lower())
  for token in tokens:
    for word in wordlist:
      if (token == word.lower()):
        wordsFound = True
        break
  return wordsFound

def getListOfErrorCodes():
  listOfErrorCodes = ['id="error-information-popup-container"',
  'site is not available',
  'this website was generated by the domain owner',
  'may be for sale'
  'id="errorMessage"',
  ]
  return listOfErrorCodes

def getListOfCommonPoliticalWords():
  wordList = ['biden',
  'trump',
  'antifa',
  'wing',
  'fake',
  'state',
  'democrats',
  'republicans',
  'aoc',
  'liberals',
  'culture',
  'fox',
  'cnn',
  'news',
  'law',
  'laws']

  return wordList
